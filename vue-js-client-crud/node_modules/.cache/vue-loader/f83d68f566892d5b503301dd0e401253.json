{"remainingRequest":"/home/aniruddha/Desktop/Practise/tutorials-vuetify/vue-js-client-crud/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aniruddha/Desktop/Practise/tutorials-vuetify/vue-js-client-crud/src/components/TutorialsList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/aniruddha/Desktop/Practise/tutorials-vuetify/vue-js-client-crud/src/components/TutorialsList.vue","mtime":1635020381072},{"path":"/home/aniruddha/Desktop/Practise/tutorials-vuetify/vue-js-client-crud/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aniruddha/Desktop/Practise/tutorials-vuetify/vue-js-client-crud/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/aniruddha/Desktop/Practise/tutorials-vuetify/vue-js-client-crud/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/aniruddha/Desktop/Practise/tutorials-vuetify/vue-js-client-crud/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aniruddha/Desktop/Practise/tutorials-vuetify/vue-js-client-crud/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5saXN0IHsKICBtYXgtd2lkdGg6IDc1MHB4Owp9Cg=="},{"version":3,"sources":["TutorialsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoMA;AACA;AACA","file":"TutorialsList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-row align=\"center\" class=\"list px-3 mx-auto\">\n    <v-col cols=\"12\" sm=\"8\">\n      <v-text-field\n        v-model=\"searchTitle\"\n        label=\"Search by Title\"\n      ></v-text-field>\n    </v-col>\n\n    <v-col cols=\"12\" sm=\"4\">\n      <v-btn\n        small\n        @click=\"\n          page = 1;\n          retrieveTutorials();\n        \"\n      >\n        Search\n      </v-btn>\n    </v-col>\n\n    <v-col cols=\"12\" sm=\"12\">\n      <v-row>\n        <v-col cols=\"4\" sm=\"3\">\n          <v-select\n            v-model=\"pageSize\"\n            :items=\"pageSizes\"\n            label=\"Items per Page\"\n            @change=\"handlePageSizeChange\"\n          ></v-select>\n        </v-col>\n\n        <v-col cols=\"12\" sm=\"9\">\n          <v-pagination\n            v-model=\"page\"\n            :length=\"totalPages\"\n            total-visible=\"7\"\n            next-icon=\"mdi-menu-right\"\n            prev-icon=\"mdi-menu-left\"\n            @input=\"handlePageChange\"\n          ></v-pagination>\n        </v-col>\n      </v-row>\n    </v-col>\n\n    <v-col cols=\"12\" sm=\"12\">\n      <v-card class=\"mx-auto\" tile>\n        <v-card-title>Tutorials</v-card-title>\n\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"tutorials\"\n          disable-pagination\n          :hide-default-footer=\"true\"\n        >\n          <template v-slot:[`item.actions`]=\"{ item }\">\n            <v-icon small class=\"mr-2\" @click=\"editTutorial(item.id)\">\n              mdi-pencil\n            </v-icon>\n            <v-icon small @click=\"deleteTutorial(item.id)\"> mdi-delete </v-icon>\n          </template>\n        </v-data-table>\n        <v-card-actions v-if=\"tutorials.length > 0\">\n          <v-btn small color=\"error\" @click=\"removeAllTutorials\">\n            Remove All\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport TutorialDataService from \"../services/TutorialDataService\";\nexport default {\n  name: \"tutorials-list\",\n  data() {\n    return {\n      tutorials: [],\n      title: \"\",\n      headers: [\n        { text: \"Title\", align: \"start\", sortable: false, value: \"title\" },\n        { text: \"Description\", value: \"description\", sortable: false },\n        { text: \"Status\", value: \"status\", sortable: false },\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n\n      page: 1,\n      totalPages: 0,\n      pageSize: 3,\n\n      pageSizes: [3, 6, 9],\n    };\n  },\n  methods: {\n    getRequestParams(searchTitle, page, pageSize) {\n      let params = {};\n\n      if (searchTitle) {\n        params[\"title\"] = searchTitle;\n      }\n\n      if (page) {\n        params[\"page\"] = page - 1;\n      }\n\n      if (pageSize) {\n        params[\"size\"] = pageSize;\n      }\n\n      return params;\n    },\n\n    retrieveTutorials() {\n      const params = this.getRequestParams(\n        this.searchTitle,\n        this.page,\n        this.pageSize\n      );\n\n      TutorialDataService.getAll(params)\n        .then((response) => {\n          const { tutorials, totalPages } = response.data;\n          this.tutorials = tutorials.map(this.getDisplayTutorial);\n          this.totalPages = totalPages;\n\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    handlePageChange(value) {\n      this.page = value;\n      this.retrieveTutorials();\n    },\n\n    handlePageSizeChange(size) {\n      this.pageSize = size;\n      this.page = 1;\n      this.retrieveTutorials();\n    },\n\n    removeAllTutorials() {\n      TutorialDataService.deleteAll()\n        .then((response) => {\n          console.log(response.data);\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    searchTitle() {\n      TutorialDataService.findByTitle(this.title)\n        .then((response) => {\n          this.tutorials = response.data.map(this.getDisplayTutorial);\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    editTutorial(id) {\n      this.$router.push({ name: \"tutorial-details\", params: { id: id } });\n    },\n\n    deleteTutorial(id) {\n      TutorialDataService.delete(id)\n        .then(() => {\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    getDisplayTutorial(tutorial) {\n      return {\n        id: tutorial.id,\n        title: tutorial.title.substr(0, 20) + \"...\",\n        description: tutorial.description.substr(0, 20) + \"...\",\n        status: tutorial.published ? \"Published\" : \"Pending\",\n      };\n    },\n  },\n  mounted() {\n    this.retrieveTutorials();\n  },\n};\n</script>\n\n<style>\n.list {\n  max-width: 750px;\n}\n</style>"]}]}